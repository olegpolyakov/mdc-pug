mixin mdc-list
    - const { element = 'ul', ...rest } = attributes

    #{element}.mdc-list(
        data-mdc-auto-init='MDCList'
    )&attributes(rest)
        block

mixin mdc-list-item(_primaryText, _secondaryText)
    - const { element = 'li', primaryText = _primaryText, secondaryText = _secondaryText, overline, icon, leadingIcon = icon, image, leadingImage = image, avatar, leadingAvatar = avatar, thumbnail, leadingThumbnail = thumbnail, video, leadingVideo = video, leadingCheckbox, leadingRadio, leadingSwitch, meta, trailingMeta = meta, trailingIcon, trailingCheckbox, trailingRadio, trailingSwitch, activated, selected, disabled, nonInteractive, ripple, ...rest } = attributes
    - const lines = Boolean(primaryText) + Boolean(secondaryText) + Boolean(overline)

    #{element}.mdc-list-item(
        class={
            'mdc-list-item--activated': activated,
            'mdc-list-item--selected': selected,
            'mdc-list-item--disabled': disabled,
            'mdc-list-item--non-interactive': nonInteractive,
            'mdc-list-item--with-one-line': lines === 1,
            'mdc-list-item--with-two-lines': lines === 2,
            'mdc-list-item--with-three-lines': lines === 3,
            'mdc-list-item--with-overline': overline,
            'mdc-list-item--with-leading-icon': leadingIcon,
            'mdc-list-item--with-leading-image': leadingImage,
            'mdc-list-item--with-leading-avatar': leadingAvatar,
            'mdc-list-item--with-leading-thumbnail': leadingThumbnail,
            'mdc-list-item--with-leading-video': leadingVideo,
            'mdc-list-item--with-leading-checkbox': leadingCheckbox,
            'mdc-list-item--with-leading-radio': leadingRadio,
            'mdc-list-item--with-leading-switch': leadingSwitch,
            'mdc-list-item--with-trailing-meta': trailingMeta,
            'mdc-list-item--with-trailing-icon': trailingIcon,
            'mdc-list-item--with-trailing-checkbox': trailingCheckbox,
            'mdc-list-item--with-trailing-radio': trailingRadio,
            'mdc-list-item--with-trailing-switch': trailingSwitch
        }
        data-mdc-auto-init=(ripple !== false) && 'MDCRipple'
    )&attributes(rest)
        span.mdc-list-item__ripple

        if leadingIcon
            +mdc-list-item__start
                +mdc-icon(leadingIcon)
        else if leadingImage
            +mdc-list-item__start
                +image(leadingImage)
        else if leadingAvatar
            +mdc-list-item__start
                case typeof leadingAvatar
                    when 'string'
                        +mdc-avatar(leadingAvatar)
                    when 'object'
                        +mdc-avatar&attributes(leadingAvatar)

        if lines > 0
            +mdc-list-item__content(
                overline=overline
                primaryText=primaryText
                secondaryText=secondaryText
            )
        
        if trailingMeta
            +mdc-list-item__end= meta
        else if trailingIcon
            +mdc-list-item__end
                +mdc-icon(trailingIcon)

        block

mixin mdc-list-item__start(content)
    - const { element = 'span', ...rest } = attributes
    #{element}.mdc-list-item__start&attributes(rest)
        =content
        block

mixin mdc-list-item__content(content)
    - const { element = 'span', primaryText, secondaryText, overline, ...rest } = attributes

    #{element}.mdc-list-item__content&attributes(rest)
        if overline
            span.mdc-list-item__overline-text= overline

        if primaryText
            span.mdc-list-item__primary-text= primaryText

        if secondaryText
            span.mdc-list-item__secondary-text= secondaryText
                
        block

mixin mdc-list-item__end(content)
    - const { element = 'span', ...rest } = attributes

    #{element}.mdc-list-item__end&attributes(rest)
        =content
        block

mixin mdc-list-divider
    - const { element = 'hr', inset, padded, ...rest } = attributes

    #{element}.mdc-list-divider(
        class={
            [`mdc-list-divider--inset-${inset}`]: inset
        }
        role=(element !== 'hr' && 'separator')
    )&attributes(rest)

mixin mdc-list-group
    - const { element = 'hr', ...rest } = attributes

    #{element}.mdc-list-group
        block

mixin mdc-list-group__subheader(content)
    - const { element = 'h3', ...rest } = attributes

    #{element}.mdc-list-group__subheader&attributes(rest)
        =content
        block