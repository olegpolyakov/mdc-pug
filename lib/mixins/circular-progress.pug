mixin mdc-circular-progress(_value = 0)
    - const { element = 'div', value = Number(_value), indeterminate, closed, colorful, size = 'medium', small, medium, large, ...rest } = attributes
    - let props;

    case size
        when 'small'
            - props = { viewBox: 24, radius: 8.75, strokeWidth: 2.5, gapPatchStrokeWidth: 2, strokeDasharray: 54.978, indeterminateStrokeDashoffset: 27.489 }

        when 'medium'
            - props = { viewBox: 32, radius: 12.5, strokeWidth: 3, gapPatchStrokeWidth: 2.4, strokeDasharray: 78.54, indeterminateStrokeDashoffset: 39.27 }
        
        when 'large'
            - props = { viewBox: 48, radius: 18, strokeWidth: 4, gapPatchStrokeWidth: 3.2, strokeDasharray: 113.097, indeterminateStrokeDashoffset: 56.549 }

    - const progress = value > 1 ? (value / 100) : value;
    - const { viewBox, radius, strokeWidth, gapPatchStrokeWidth, strokeDasharray, indeterminateStrokeDashoffset } = props;
    - const cx = viewBox / 2, cy = viewBox / 2;
    - const strokeDashoffset = (2 * Math.PI * radius) * (1 - progress);
    - const layers = colorful ? [1, 2, 3, 4] : [0];
    
    #{element}.mdc-circular-progress(
        class={
            'mdc-circular-progress--indeterminate': indeterminate,
            'mdc-circular-progress--closed': closed,
            'mdc-circular-progress--small': small,
            'mdc-circular-progress--medium': medium,
            'mdc-circular-progress--large': large,
            [`mdc-circular-progress--${size}`]: size
        }
        role='progressbar'
        aria-valuemin='0'
        aria-valuemax='1'
        data-mdc-auto-init='MDCCircularProgress'
    )&attributes(rest)
        div.mdc-circular-progress__determinate-container
            svg.mdc-circular-progress__determinate-circle-graphic(
                viewBox=`0 0 ${viewBox} ${viewBox}`
                xmlns='http://www.w3.org/2000/svg'
            )
                circle.mdc-circular-progress__determinate-track(
                    cx=cx
                    cy=cy
                    r=radius
                    stroke-width=strokeWidth
                )
                circle.mdc-circular-progress__determinate-circle(
                    cx=cx
                    cy=cy
                    r=radius
                    stroke-width=strokeWidth
                    stroke-dasharray=strokeDasharray
                    stroke-dashoffset=strokeDashoffset
                )
        
        div.mdc-circular-progress__indeterminate-container
            for n in layers
                div.mdc-circular-progress__spinner-layer(class={[`mdc-circular-progress__color-${n}`]: n })
                    div.mdc-circular-progress__circle-clipper.mdc-circular-progress__circle-left
                        svg.mdc-circular-progress__indeterminate-circle-graphic(
                            viewBox=`0 0 ${viewBox} ${viewBox}`
                            xmlns='http://www.w3.org/2000/svg'
                        )
                            circle(
                                cx=cx
                                cy=cy
                                r=radius
                                stroke-width=strokeWidth
                                stroke-dasharray=strokeDasharray
                                stroke-dashoffset=indeterminateStrokeDashoffset
                            )
                    div.mdc-circular-progress__gap-patch
                        svg.mdc-circular-progress__indeterminate-circle-graphic(
                            viewBox=`0 0 ${viewBox} ${viewBox}`
                            xmlns='http://www.w3.org/2000/svg'
                        )
                            circle(
                                cx=cx
                                cy=cy
                                r=radius
                                stroke-width=gapPatchStrokeWidth
                                stroke-dasharray=strokeDasharray
                                stroke-dashoffset=indeterminateStrokeDashoffset
                            )
                    div.mdc-circular-progress__circle-clipper.mdc-circular-progress__circle-right
                        svg.mdc-circular-progress__indeterminate-circle-graphic(
                            viewBox=`0 0 ${viewBox} ${viewBox}`
                            xmlns='http://www.w3.org/2000/svg'
                        )
                            circle(
                                cx=cx
                                cy=cy
                                r=radius
                                stroke-width=strokeWidth
                                stroke-dasharray=strokeDasharray
                                stroke-dashoffset=indeterminateStrokeDashoffset
                            )